
Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000069c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000628  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800100  00800100  0000069c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000069c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  0000070c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000970  00000000  00000000  00000764  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bb  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046e  00000000  00000000  0000188f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  00001d00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043b  00000000  00000000  00001dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000293  00000000  00000000  00002203  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002496  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 32       	cpi	r26, 0x21	; 33
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 68 01 	call	0x2d0	; 0x2d0 <main>
  88:	0c 94 12 03 	jmp	0x624	; 0x624 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init_motor>:
}

//! Transmit/write a NULL-terminated string to the output
void writestring(char *c){
	unsigned int i = 0;
	while(c[i] != 0)
  90:	23 9a       	sbi	0x04, 3	; 4
  92:	53 9a       	sbi	0x0a, 3	; 10
  94:	8a b1       	in	r24, 0x0a	; 10
  96:	80 66       	ori	r24, 0x60	; 96
  98:	8a b9       	out	0x0a, r24	; 10
  9a:	93 ea       	ldi	r25, 0xA3	; 163
  9c:	94 bd       	out	0x24, r25	; 36
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	85 bd       	out	0x25, r24	; 37
  a2:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  a6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
  aa:	08 95       	ret

000000ac <drive_motor>:
  ac:	cf 92       	push	r12
  ae:	df 92       	push	r13
  b0:	ef 92       	push	r14
  b2:	ff 92       	push	r15
  b4:	0f 93       	push	r16
  b6:	1f 93       	push	r17
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	8b 01       	movw	r16, r22
  be:	bc 01       	movw	r22, r24
  c0:	99 0f       	add	r25, r25
  c2:	88 0b       	sbc	r24, r24
  c4:	99 0b       	sbc	r25, r25
  c6:	0e 94 19 02 	call	0x432	; 0x432 <__floatsisf>
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	48 ec       	ldi	r20, 0xC8	; 200
  d0:	52 e4       	ldi	r21, 0x42	; 66
  d2:	0e 94 6f 01 	call	0x2de	; 0x2de <__divsf3>
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	4f e7       	ldi	r20, 0x7F	; 127
  dc:	53 e4       	ldi	r21, 0x43	; 67
  de:	0e 94 a5 02 	call	0x54a	; 0x54a <__mulsf3>
  e2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fixsfsi>
  e6:	6b 01       	movw	r12, r22
  e8:	7c 01       	movw	r14, r24
  ea:	eb 01       	movw	r28, r22
  ec:	b8 01       	movw	r22, r16
  ee:	11 0f       	add	r17, r17
  f0:	88 0b       	sbc	r24, r24
  f2:	99 0b       	sbc	r25, r25
  f4:	0e 94 19 02 	call	0x432	; 0x432 <__floatsisf>
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	48 ec       	ldi	r20, 0xC8	; 200
  fe:	52 e4       	ldi	r21, 0x42	; 66
 100:	0e 94 6f 01 	call	0x2de	; 0x2de <__divsf3>
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	4f e7       	ldi	r20, 0x7F	; 127
 10a:	53 e4       	ldi	r21, 0x43	; 67
 10c:	0e 94 a5 02 	call	0x54a	; 0x54a <__mulsf3>
 110:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fixsfsi>
 114:	dd 23       	and	r29, r29
 116:	6c f1       	brlt	.+90     	; 0x172 <drive_motor+0xc6>
 118:	77 23       	and	r23, r23
 11a:	a4 f0       	brlt	.+40     	; 0x144 <drive_motor+0x98>
 11c:	17 bc       	out	0x27, r1	; 39
 11e:	96 01       	movw	r18, r12
 120:	cf 3f       	cpi	r28, 0xFF	; 255
 122:	d1 05       	cpc	r29, r1
 124:	19 f0       	breq	.+6      	; 0x12c <drive_motor+0x80>
 126:	14 f0       	brlt	.+4      	; 0x12c <drive_motor+0x80>
 128:	2f ef       	ldi	r18, 0xFF	; 255
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	28 bd       	out	0x28, r18	; 40
 12e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 132:	6f 3f       	cpi	r22, 0xFF	; 255
 134:	71 05       	cpc	r23, r1
 136:	19 f0       	breq	.+6      	; 0x13e <drive_motor+0x92>
 138:	14 f0       	brlt	.+4      	; 0x13e <drive_motor+0x92>
 13a:	6f ef       	ldi	r22, 0xFF	; 255
 13c:	70 e0       	ldi	r23, 0x00	; 0
 13e:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 142:	49 c0       	rjmp	.+146    	; 0x1d6 <drive_motor+0x12a>
 144:	17 bc       	out	0x27, r1	; 39
 146:	96 01       	movw	r18, r12
 148:	cf 3f       	cpi	r28, 0xFF	; 255
 14a:	d1 05       	cpc	r29, r1
 14c:	19 f0       	breq	.+6      	; 0x154 <drive_motor+0xa8>
 14e:	14 f0       	brlt	.+4      	; 0x154 <drive_motor+0xa8>
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	28 bd       	out	0x28, r18	; 40
 156:	71 95       	neg	r23
 158:	61 95       	neg	r22
 15a:	71 09       	sbc	r23, r1
 15c:	6f 3f       	cpi	r22, 0xFF	; 255
 15e:	71 05       	cpc	r23, r1
 160:	19 f0       	breq	.+6      	; 0x168 <drive_motor+0xbc>
 162:	14 f0       	brlt	.+4      	; 0x168 <drive_motor+0xbc>
 164:	6f ef       	ldi	r22, 0xFF	; 255
 166:	70 e0       	ldi	r23, 0x00	; 0
 168:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 16c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 170:	32 c0       	rjmp	.+100    	; 0x1d6 <drive_motor+0x12a>
 172:	77 23       	and	r23, r23
 174:	bc f0       	brlt	.+46     	; 0x1a4 <drive_motor+0xf8>
 176:	22 27       	eor	r18, r18
 178:	33 27       	eor	r19, r19
 17a:	2c 19       	sub	r18, r12
 17c:	3d 09       	sbc	r19, r13
 17e:	2f 3f       	cpi	r18, 0xFF	; 255
 180:	31 05       	cpc	r19, r1
 182:	19 f0       	breq	.+6      	; 0x18a <drive_motor+0xde>
 184:	14 f0       	brlt	.+4      	; 0x18a <drive_motor+0xde>
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	27 bd       	out	0x27, r18	; 39
 18c:	18 bc       	out	0x28, r1	; 40
 18e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 192:	6f 3f       	cpi	r22, 0xFF	; 255
 194:	71 05       	cpc	r23, r1
 196:	19 f0       	breq	.+6      	; 0x19e <drive_motor+0xf2>
 198:	14 f0       	brlt	.+4      	; 0x19e <drive_motor+0xf2>
 19a:	6f ef       	ldi	r22, 0xFF	; 255
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 1a2:	19 c0       	rjmp	.+50     	; 0x1d6 <drive_motor+0x12a>
 1a4:	22 27       	eor	r18, r18
 1a6:	33 27       	eor	r19, r19
 1a8:	2c 19       	sub	r18, r12
 1aa:	3d 09       	sbc	r19, r13
 1ac:	2f 3f       	cpi	r18, 0xFF	; 255
 1ae:	31 05       	cpc	r19, r1
 1b0:	19 f0       	breq	.+6      	; 0x1b8 <drive_motor+0x10c>
 1b2:	14 f0       	brlt	.+4      	; 0x1b8 <drive_motor+0x10c>
 1b4:	2f ef       	ldi	r18, 0xFF	; 255
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	27 bd       	out	0x27, r18	; 39
 1ba:	18 bc       	out	0x28, r1	; 40
 1bc:	71 95       	neg	r23
 1be:	61 95       	neg	r22
 1c0:	71 09       	sbc	r23, r1
 1c2:	6f 3f       	cpi	r22, 0xFF	; 255
 1c4:	71 05       	cpc	r23, r1
 1c6:	19 f0       	breq	.+6      	; 0x1ce <drive_motor+0x122>
 1c8:	14 f0       	brlt	.+4      	; 0x1ce <drive_motor+0x122>
 1ca:	6f ef       	ldi	r22, 0xFF	; 255
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 1d2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	1f 91       	pop	r17
 1dc:	0f 91       	pop	r16
 1de:	ff 90       	pop	r15
 1e0:	ef 90       	pop	r14
 1e2:	df 90       	pop	r13
 1e4:	cf 90       	pop	r12
 1e6:	08 95       	ret

000001e8 <initUART>:
 1e8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1ec:	83 e3       	ldi	r24, 0x33	; 51
 1ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 1f2:	e1 ec       	ldi	r30, 0xC1	; 193
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	88 61       	ori	r24, 0x18	; 24
 1fa:	80 83       	st	Z, r24
 1fc:	e2 ec       	ldi	r30, 0xC2	; 194
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	86 60       	ori	r24, 0x06	; 6
 204:	80 83       	st	Z, r24
 206:	08 95       	ret

00000208 <readString>:
		writeChar(c[i++]);
}

void readString(){
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
	done = 0;
 20c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	while (done == 0){
		if(UCSR0A & (1 << RXC0)){
 210:	e0 ec       	ldi	r30, 0xC0	; 192
 212:	f0 e0       	ldi	r31, 0x00	; 0
			
			receivedChar = UDR0;				// Read the data from the RX buffer
 214:	c6 ec       	ldi	r28, 0xC6	; 198
 216:	d0 e0       	ldi	r29, 0x00	; 0
			else if(receivedChar == 'r')		// right value input ready
				turnt = 0;
			
			else if(turnt){						// set right
				r = (int)receivedChar;
				done = 1;
 218:	91 e0       	ldi	r25, 0x01	; 1
		writeChar(c[i++]);
}

void readString(){
	done = 0;
	while (done == 0){
 21a:	3b c0       	rjmp	.+118    	; 0x292 <readString+0x8a>
		if(UCSR0A & (1 << RXC0)){
 21c:	80 81       	ld	r24, Z
 21e:	88 23       	and	r24, r24
 220:	ec f7       	brge	.-6      	; 0x21c <readString+0x14>
			
			receivedChar = UDR0;				// Read the data from the RX buffer
 222:	88 81       	ld	r24, Y
 224:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <receivedChar>
			charBuff[charread] = receivedChar;	// load char into buffer
 228:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <charread>
 22c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <receivedChar>
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	a9 5f       	subi	r26, 0xF9	; 249
 234:	be 4f       	sbci	r27, 0xFE	; 254
 236:	8c 93       	st	X, r24
			
			if(receivedChar == '<')				// esp32 has stopped sending gibberish
 238:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <receivedChar>
 23c:	8c 33       	cpi	r24, 0x3C	; 60
 23e:	69 f1       	breq	.+90     	; 0x29a <readString+0x92>
				return;
			
			else if(receivedChar == 'l')		// left value input ready
 240:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <receivedChar>
 244:	8c 36       	cpi	r24, 0x6C	; 108
 246:	19 f4       	brne	.+6      	; 0x24e <readString+0x46>
				turnt = 1;
 248:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <turnt>
 24c:	22 c0       	rjmp	.+68     	; 0x292 <readString+0x8a>
			
			else if(receivedChar == 'r')		// right value input ready
 24e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <receivedChar>
 252:	82 37       	cpi	r24, 0x72	; 114
 254:	19 f4       	brne	.+6      	; 0x25c <readString+0x54>
				turnt = 0;
 256:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <turnt>
 25a:	1b c0       	rjmp	.+54     	; 0x292 <readString+0x8a>
			
			else if(turnt){						// set right
 25c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <turnt>
 260:	88 23       	and	r24, r24
 262:	61 f0       	breq	.+24     	; 0x27c <readString+0x74>
				r = (int)receivedChar;
 264:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <receivedChar>
 268:	02 2e       	mov	r0, r18
 26a:	00 0c       	add	r0, r0
 26c:	33 0b       	sbc	r19, r19
 26e:	30 93 06 01 	sts	0x0106, r19	; 0x800106 <r+0x1>
 272:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <r>
				done = 1;
 276:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <_edata>
 27a:	0b c0       	rjmp	.+22     	; 0x292 <readString+0x8a>
			}
			else{								// set left
				l = (int)receivedChar;
 27c:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <receivedChar>
 280:	02 2e       	mov	r0, r18
 282:	00 0c       	add	r0, r0
 284:	33 0b       	sbc	r19, r19
 286:	30 93 04 01 	sts	0x0104, r19	; 0x800104 <l+0x1>
 28a:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <l>
				done = 0;
 28e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		writeChar(c[i++]);
}

void readString(){
	done = 0;
	while (done == 0){
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 296:	88 23       	and	r24, r24
 298:	09 f2       	breq	.-126    	; 0x21c <readString+0x14>
				done = 0;
			}
		}

	}
}
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	08 95       	ret

000002a0 <control_bot>:
#include "drive_motor.h"
#include "uart.h"

void control_bot(){ // controls everything on bot
	
	readString();
 2a0:	0e 94 04 01 	call	0x208	; 0x208 <readString>
	if(done)
 2a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2a8:	88 23       	and	r24, r24
 2aa:	59 f0       	breq	.+22     	; 0x2c2 <control_bot+0x22>
	drive_motor(l, r);
 2ac:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <r>
 2b0:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <r+0x1>
 2b4:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <l>
 2b8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <l+0x1>
 2bc:	0e 94 56 00 	call	0xac	; 0xac <drive_motor>
 2c0:	08 95       	ret
	else
	drive_motor(0, 0);
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 56 00 	call	0xac	; 0xac <drive_motor>
 2ce:	08 95       	ret

000002d0 <main>:
	
}

int main(void){
	// initialize WIFI 
	initUART();
 2d0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <initUART>
	init_motor();
 2d4:	0e 94 48 00 	call	0x90	; 0x90 <init_motor>
	
	

	while(1){
		control_bot();
 2d8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <control_bot>
 2dc:	fd cf       	rjmp	.-6      	; 0x2d8 <main+0x8>

000002de <__divsf3>:
 2de:	0e 94 83 01 	call	0x306	; 0x306 <__divsf3x>
 2e2:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_round>
 2e6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_pscB>
 2ea:	58 f0       	brcs	.+22     	; 0x302 <__divsf3+0x24>
 2ec:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fp_pscA>
 2f0:	40 f0       	brcs	.+16     	; 0x302 <__divsf3+0x24>
 2f2:	29 f4       	brne	.+10     	; 0x2fe <__divsf3+0x20>
 2f4:	5f 3f       	cpi	r21, 0xFF	; 255
 2f6:	29 f0       	breq	.+10     	; 0x302 <__divsf3+0x24>
 2f8:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_inf>
 2fc:	51 11       	cpse	r21, r1
 2fe:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_szero>
 302:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__fp_nan>

00000306 <__divsf3x>:
 306:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fp_split3>
 30a:	68 f3       	brcs	.-38     	; 0x2e6 <__divsf3+0x8>

0000030c <__divsf3_pse>:
 30c:	99 23       	and	r25, r25
 30e:	b1 f3       	breq	.-20     	; 0x2fc <__divsf3+0x1e>
 310:	55 23       	and	r21, r21
 312:	91 f3       	breq	.-28     	; 0x2f8 <__divsf3+0x1a>
 314:	95 1b       	sub	r25, r21
 316:	55 0b       	sbc	r21, r21
 318:	bb 27       	eor	r27, r27
 31a:	aa 27       	eor	r26, r26
 31c:	62 17       	cp	r22, r18
 31e:	73 07       	cpc	r23, r19
 320:	84 07       	cpc	r24, r20
 322:	38 f0       	brcs	.+14     	; 0x332 <__divsf3_pse+0x26>
 324:	9f 5f       	subi	r25, 0xFF	; 255
 326:	5f 4f       	sbci	r21, 0xFF	; 255
 328:	22 0f       	add	r18, r18
 32a:	33 1f       	adc	r19, r19
 32c:	44 1f       	adc	r20, r20
 32e:	aa 1f       	adc	r26, r26
 330:	a9 f3       	breq	.-22     	; 0x31c <__divsf3_pse+0x10>
 332:	35 d0       	rcall	.+106    	; 0x39e <__divsf3_pse+0x92>
 334:	0e 2e       	mov	r0, r30
 336:	3a f0       	brmi	.+14     	; 0x346 <__divsf3_pse+0x3a>
 338:	e0 e8       	ldi	r30, 0x80	; 128
 33a:	32 d0       	rcall	.+100    	; 0x3a0 <__divsf3_pse+0x94>
 33c:	91 50       	subi	r25, 0x01	; 1
 33e:	50 40       	sbci	r21, 0x00	; 0
 340:	e6 95       	lsr	r30
 342:	00 1c       	adc	r0, r0
 344:	ca f7       	brpl	.-14     	; 0x338 <__divsf3_pse+0x2c>
 346:	2b d0       	rcall	.+86     	; 0x39e <__divsf3_pse+0x92>
 348:	fe 2f       	mov	r31, r30
 34a:	29 d0       	rcall	.+82     	; 0x39e <__divsf3_pse+0x92>
 34c:	66 0f       	add	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	bb 1f       	adc	r27, r27
 354:	26 17       	cp	r18, r22
 356:	37 07       	cpc	r19, r23
 358:	48 07       	cpc	r20, r24
 35a:	ab 07       	cpc	r26, r27
 35c:	b0 e8       	ldi	r27, 0x80	; 128
 35e:	09 f0       	breq	.+2      	; 0x362 <__divsf3_pse+0x56>
 360:	bb 0b       	sbc	r27, r27
 362:	80 2d       	mov	r24, r0
 364:	bf 01       	movw	r22, r30
 366:	ff 27       	eor	r31, r31
 368:	93 58       	subi	r25, 0x83	; 131
 36a:	5f 4f       	sbci	r21, 0xFF	; 255
 36c:	3a f0       	brmi	.+14     	; 0x37c <__divsf3_pse+0x70>
 36e:	9e 3f       	cpi	r25, 0xFE	; 254
 370:	51 05       	cpc	r21, r1
 372:	78 f0       	brcs	.+30     	; 0x392 <__divsf3_pse+0x86>
 374:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_inf>
 378:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_szero>
 37c:	5f 3f       	cpi	r21, 0xFF	; 255
 37e:	e4 f3       	brlt	.-8      	; 0x378 <__divsf3_pse+0x6c>
 380:	98 3e       	cpi	r25, 0xE8	; 232
 382:	d4 f3       	brlt	.-12     	; 0x378 <__divsf3_pse+0x6c>
 384:	86 95       	lsr	r24
 386:	77 95       	ror	r23
 388:	67 95       	ror	r22
 38a:	b7 95       	ror	r27
 38c:	f7 95       	ror	r31
 38e:	9f 5f       	subi	r25, 0xFF	; 255
 390:	c9 f7       	brne	.-14     	; 0x384 <__divsf3_pse+0x78>
 392:	88 0f       	add	r24, r24
 394:	91 1d       	adc	r25, r1
 396:	96 95       	lsr	r25
 398:	87 95       	ror	r24
 39a:	97 f9       	bld	r25, 7
 39c:	08 95       	ret
 39e:	e1 e0       	ldi	r30, 0x01	; 1
 3a0:	66 0f       	add	r22, r22
 3a2:	77 1f       	adc	r23, r23
 3a4:	88 1f       	adc	r24, r24
 3a6:	bb 1f       	adc	r27, r27
 3a8:	62 17       	cp	r22, r18
 3aa:	73 07       	cpc	r23, r19
 3ac:	84 07       	cpc	r24, r20
 3ae:	ba 07       	cpc	r27, r26
 3b0:	20 f0       	brcs	.+8      	; 0x3ba <__divsf3_pse+0xae>
 3b2:	62 1b       	sub	r22, r18
 3b4:	73 0b       	sbc	r23, r19
 3b6:	84 0b       	sbc	r24, r20
 3b8:	ba 0b       	sbc	r27, r26
 3ba:	ee 1f       	adc	r30, r30
 3bc:	88 f7       	brcc	.-30     	; 0x3a0 <__divsf3_pse+0x94>
 3be:	e0 95       	com	r30
 3c0:	08 95       	ret

000003c2 <__fixsfsi>:
 3c2:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fixunssfsi>
 3c6:	68 94       	set
 3c8:	b1 11       	cpse	r27, r1
 3ca:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_szero>
 3ce:	08 95       	ret

000003d0 <__fixunssfsi>:
 3d0:	0e 94 84 02 	call	0x508	; 0x508 <__fp_splitA>
 3d4:	88 f0       	brcs	.+34     	; 0x3f8 <__fixunssfsi+0x28>
 3d6:	9f 57       	subi	r25, 0x7F	; 127
 3d8:	98 f0       	brcs	.+38     	; 0x400 <__LOCK_REGION_LENGTH__>
 3da:	b9 2f       	mov	r27, r25
 3dc:	99 27       	eor	r25, r25
 3de:	b7 51       	subi	r27, 0x17	; 23
 3e0:	b0 f0       	brcs	.+44     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e2:	e1 f0       	breq	.+56     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3e4:	66 0f       	add	r22, r22
 3e6:	77 1f       	adc	r23, r23
 3e8:	88 1f       	adc	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	1a f0       	brmi	.+6      	; 0x3f4 <__fixunssfsi+0x24>
 3ee:	ba 95       	dec	r27
 3f0:	c9 f7       	brne	.-14     	; 0x3e4 <__fixunssfsi+0x14>
 3f2:	14 c0       	rjmp	.+40     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f4:	b1 30       	cpi	r27, 0x01	; 1
 3f6:	91 f0       	breq	.+36     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f8:	0e 94 9e 02 	call	0x53c	; 0x53c <__fp_zero>
 3fc:	b1 e0       	ldi	r27, 0x01	; 1
 3fe:	08 95       	ret
 400:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_zero>
 404:	67 2f       	mov	r22, r23
 406:	78 2f       	mov	r23, r24
 408:	88 27       	eor	r24, r24
 40a:	b8 5f       	subi	r27, 0xF8	; 248
 40c:	39 f0       	breq	.+14     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40e:	b9 3f       	cpi	r27, 0xF9	; 249
 410:	cc f3       	brlt	.-14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 412:	86 95       	lsr	r24
 414:	77 95       	ror	r23
 416:	67 95       	ror	r22
 418:	b3 95       	inc	r27
 41a:	d9 f7       	brne	.-10     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 41c:	3e f4       	brtc	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41e:	90 95       	com	r25
 420:	80 95       	com	r24
 422:	70 95       	com	r23
 424:	61 95       	neg	r22
 426:	7f 4f       	sbci	r23, 0xFF	; 255
 428:	8f 4f       	sbci	r24, 0xFF	; 255
 42a:	9f 4f       	sbci	r25, 0xFF	; 255
 42c:	08 95       	ret

0000042e <__floatunsisf>:
 42e:	e8 94       	clt
 430:	09 c0       	rjmp	.+18     	; 0x444 <__floatsisf+0x12>

00000432 <__floatsisf>:
 432:	97 fb       	bst	r25, 7
 434:	3e f4       	brtc	.+14     	; 0x444 <__floatsisf+0x12>
 436:	90 95       	com	r25
 438:	80 95       	com	r24
 43a:	70 95       	com	r23
 43c:	61 95       	neg	r22
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	8f 4f       	sbci	r24, 0xFF	; 255
 442:	9f 4f       	sbci	r25, 0xFF	; 255
 444:	99 23       	and	r25, r25
 446:	a9 f0       	breq	.+42     	; 0x472 <__floatsisf+0x40>
 448:	f9 2f       	mov	r31, r25
 44a:	96 e9       	ldi	r25, 0x96	; 150
 44c:	bb 27       	eor	r27, r27
 44e:	93 95       	inc	r25
 450:	f6 95       	lsr	r31
 452:	87 95       	ror	r24
 454:	77 95       	ror	r23
 456:	67 95       	ror	r22
 458:	b7 95       	ror	r27
 45a:	f1 11       	cpse	r31, r1
 45c:	f8 cf       	rjmp	.-16     	; 0x44e <__floatsisf+0x1c>
 45e:	fa f4       	brpl	.+62     	; 0x49e <__floatsisf+0x6c>
 460:	bb 0f       	add	r27, r27
 462:	11 f4       	brne	.+4      	; 0x468 <__floatsisf+0x36>
 464:	60 ff       	sbrs	r22, 0
 466:	1b c0       	rjmp	.+54     	; 0x49e <__floatsisf+0x6c>
 468:	6f 5f       	subi	r22, 0xFF	; 255
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	9f 4f       	sbci	r25, 0xFF	; 255
 470:	16 c0       	rjmp	.+44     	; 0x49e <__floatsisf+0x6c>
 472:	88 23       	and	r24, r24
 474:	11 f0       	breq	.+4      	; 0x47a <__floatsisf+0x48>
 476:	96 e9       	ldi	r25, 0x96	; 150
 478:	11 c0       	rjmp	.+34     	; 0x49c <__floatsisf+0x6a>
 47a:	77 23       	and	r23, r23
 47c:	21 f0       	breq	.+8      	; 0x486 <__floatsisf+0x54>
 47e:	9e e8       	ldi	r25, 0x8E	; 142
 480:	87 2f       	mov	r24, r23
 482:	76 2f       	mov	r23, r22
 484:	05 c0       	rjmp	.+10     	; 0x490 <__floatsisf+0x5e>
 486:	66 23       	and	r22, r22
 488:	71 f0       	breq	.+28     	; 0x4a6 <__floatsisf+0x74>
 48a:	96 e8       	ldi	r25, 0x86	; 134
 48c:	86 2f       	mov	r24, r22
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	60 e0       	ldi	r22, 0x00	; 0
 492:	2a f0       	brmi	.+10     	; 0x49e <__floatsisf+0x6c>
 494:	9a 95       	dec	r25
 496:	66 0f       	add	r22, r22
 498:	77 1f       	adc	r23, r23
 49a:	88 1f       	adc	r24, r24
 49c:	da f7       	brpl	.-10     	; 0x494 <__floatsisf+0x62>
 49e:	88 0f       	add	r24, r24
 4a0:	96 95       	lsr	r25
 4a2:	87 95       	ror	r24
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <__fp_inf>:
 4a8:	97 f9       	bld	r25, 7
 4aa:	9f 67       	ori	r25, 0x7F	; 127
 4ac:	80 e8       	ldi	r24, 0x80	; 128
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	08 95       	ret

000004b4 <__fp_nan>:
 4b4:	9f ef       	ldi	r25, 0xFF	; 255
 4b6:	80 ec       	ldi	r24, 0xC0	; 192
 4b8:	08 95       	ret

000004ba <__fp_pscA>:
 4ba:	00 24       	eor	r0, r0
 4bc:	0a 94       	dec	r0
 4be:	16 16       	cp	r1, r22
 4c0:	17 06       	cpc	r1, r23
 4c2:	18 06       	cpc	r1, r24
 4c4:	09 06       	cpc	r0, r25
 4c6:	08 95       	ret

000004c8 <__fp_pscB>:
 4c8:	00 24       	eor	r0, r0
 4ca:	0a 94       	dec	r0
 4cc:	12 16       	cp	r1, r18
 4ce:	13 06       	cpc	r1, r19
 4d0:	14 06       	cpc	r1, r20
 4d2:	05 06       	cpc	r0, r21
 4d4:	08 95       	ret

000004d6 <__fp_round>:
 4d6:	09 2e       	mov	r0, r25
 4d8:	03 94       	inc	r0
 4da:	00 0c       	add	r0, r0
 4dc:	11 f4       	brne	.+4      	; 0x4e2 <__fp_round+0xc>
 4de:	88 23       	and	r24, r24
 4e0:	52 f0       	brmi	.+20     	; 0x4f6 <__fp_round+0x20>
 4e2:	bb 0f       	add	r27, r27
 4e4:	40 f4       	brcc	.+16     	; 0x4f6 <__fp_round+0x20>
 4e6:	bf 2b       	or	r27, r31
 4e8:	11 f4       	brne	.+4      	; 0x4ee <__fp_round+0x18>
 4ea:	60 ff       	sbrs	r22, 0
 4ec:	04 c0       	rjmp	.+8      	; 0x4f6 <__fp_round+0x20>
 4ee:	6f 5f       	subi	r22, 0xFF	; 255
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	8f 4f       	sbci	r24, 0xFF	; 255
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	08 95       	ret

000004f8 <__fp_split3>:
 4f8:	57 fd       	sbrc	r21, 7
 4fa:	90 58       	subi	r25, 0x80	; 128
 4fc:	44 0f       	add	r20, r20
 4fe:	55 1f       	adc	r21, r21
 500:	59 f0       	breq	.+22     	; 0x518 <__fp_splitA+0x10>
 502:	5f 3f       	cpi	r21, 0xFF	; 255
 504:	71 f0       	breq	.+28     	; 0x522 <__fp_splitA+0x1a>
 506:	47 95       	ror	r20

00000508 <__fp_splitA>:
 508:	88 0f       	add	r24, r24
 50a:	97 fb       	bst	r25, 7
 50c:	99 1f       	adc	r25, r25
 50e:	61 f0       	breq	.+24     	; 0x528 <__fp_splitA+0x20>
 510:	9f 3f       	cpi	r25, 0xFF	; 255
 512:	79 f0       	breq	.+30     	; 0x532 <__fp_splitA+0x2a>
 514:	87 95       	ror	r24
 516:	08 95       	ret
 518:	12 16       	cp	r1, r18
 51a:	13 06       	cpc	r1, r19
 51c:	14 06       	cpc	r1, r20
 51e:	55 1f       	adc	r21, r21
 520:	f2 cf       	rjmp	.-28     	; 0x506 <__fp_split3+0xe>
 522:	46 95       	lsr	r20
 524:	f1 df       	rcall	.-30     	; 0x508 <__fp_splitA>
 526:	08 c0       	rjmp	.+16     	; 0x538 <__fp_splitA+0x30>
 528:	16 16       	cp	r1, r22
 52a:	17 06       	cpc	r1, r23
 52c:	18 06       	cpc	r1, r24
 52e:	99 1f       	adc	r25, r25
 530:	f1 cf       	rjmp	.-30     	; 0x514 <__fp_splitA+0xc>
 532:	86 95       	lsr	r24
 534:	71 05       	cpc	r23, r1
 536:	61 05       	cpc	r22, r1
 538:	08 94       	sec
 53a:	08 95       	ret

0000053c <__fp_zero>:
 53c:	e8 94       	clt

0000053e <__fp_szero>:
 53e:	bb 27       	eor	r27, r27
 540:	66 27       	eor	r22, r22
 542:	77 27       	eor	r23, r23
 544:	cb 01       	movw	r24, r22
 546:	97 f9       	bld	r25, 7
 548:	08 95       	ret

0000054a <__mulsf3>:
 54a:	0e 94 b8 02 	call	0x570	; 0x570 <__mulsf3x>
 54e:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_round>
 552:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fp_pscA>
 556:	38 f0       	brcs	.+14     	; 0x566 <__mulsf3+0x1c>
 558:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_pscB>
 55c:	20 f0       	brcs	.+8      	; 0x566 <__mulsf3+0x1c>
 55e:	95 23       	and	r25, r21
 560:	11 f0       	breq	.+4      	; 0x566 <__mulsf3+0x1c>
 562:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_inf>
 566:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__fp_nan>
 56a:	11 24       	eor	r1, r1
 56c:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_szero>

00000570 <__mulsf3x>:
 570:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fp_split3>
 574:	70 f3       	brcs	.-36     	; 0x552 <__mulsf3+0x8>

00000576 <__mulsf3_pse>:
 576:	95 9f       	mul	r25, r21
 578:	c1 f3       	breq	.-16     	; 0x56a <__mulsf3+0x20>
 57a:	95 0f       	add	r25, r21
 57c:	50 e0       	ldi	r21, 0x00	; 0
 57e:	55 1f       	adc	r21, r21
 580:	62 9f       	mul	r22, r18
 582:	f0 01       	movw	r30, r0
 584:	72 9f       	mul	r23, r18
 586:	bb 27       	eor	r27, r27
 588:	f0 0d       	add	r31, r0
 58a:	b1 1d       	adc	r27, r1
 58c:	63 9f       	mul	r22, r19
 58e:	aa 27       	eor	r26, r26
 590:	f0 0d       	add	r31, r0
 592:	b1 1d       	adc	r27, r1
 594:	aa 1f       	adc	r26, r26
 596:	64 9f       	mul	r22, r20
 598:	66 27       	eor	r22, r22
 59a:	b0 0d       	add	r27, r0
 59c:	a1 1d       	adc	r26, r1
 59e:	66 1f       	adc	r22, r22
 5a0:	82 9f       	mul	r24, r18
 5a2:	22 27       	eor	r18, r18
 5a4:	b0 0d       	add	r27, r0
 5a6:	a1 1d       	adc	r26, r1
 5a8:	62 1f       	adc	r22, r18
 5aa:	73 9f       	mul	r23, r19
 5ac:	b0 0d       	add	r27, r0
 5ae:	a1 1d       	adc	r26, r1
 5b0:	62 1f       	adc	r22, r18
 5b2:	83 9f       	mul	r24, r19
 5b4:	a0 0d       	add	r26, r0
 5b6:	61 1d       	adc	r22, r1
 5b8:	22 1f       	adc	r18, r18
 5ba:	74 9f       	mul	r23, r20
 5bc:	33 27       	eor	r19, r19
 5be:	a0 0d       	add	r26, r0
 5c0:	61 1d       	adc	r22, r1
 5c2:	23 1f       	adc	r18, r19
 5c4:	84 9f       	mul	r24, r20
 5c6:	60 0d       	add	r22, r0
 5c8:	21 1d       	adc	r18, r1
 5ca:	82 2f       	mov	r24, r18
 5cc:	76 2f       	mov	r23, r22
 5ce:	6a 2f       	mov	r22, r26
 5d0:	11 24       	eor	r1, r1
 5d2:	9f 57       	subi	r25, 0x7F	; 127
 5d4:	50 40       	sbci	r21, 0x00	; 0
 5d6:	9a f0       	brmi	.+38     	; 0x5fe <__mulsf3_pse+0x88>
 5d8:	f1 f0       	breq	.+60     	; 0x616 <__mulsf3_pse+0xa0>
 5da:	88 23       	and	r24, r24
 5dc:	4a f0       	brmi	.+18     	; 0x5f0 <__mulsf3_pse+0x7a>
 5de:	ee 0f       	add	r30, r30
 5e0:	ff 1f       	adc	r31, r31
 5e2:	bb 1f       	adc	r27, r27
 5e4:	66 1f       	adc	r22, r22
 5e6:	77 1f       	adc	r23, r23
 5e8:	88 1f       	adc	r24, r24
 5ea:	91 50       	subi	r25, 0x01	; 1
 5ec:	50 40       	sbci	r21, 0x00	; 0
 5ee:	a9 f7       	brne	.-22     	; 0x5da <__mulsf3_pse+0x64>
 5f0:	9e 3f       	cpi	r25, 0xFE	; 254
 5f2:	51 05       	cpc	r21, r1
 5f4:	80 f0       	brcs	.+32     	; 0x616 <__mulsf3_pse+0xa0>
 5f6:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_inf>
 5fa:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_szero>
 5fe:	5f 3f       	cpi	r21, 0xFF	; 255
 600:	e4 f3       	brlt	.-8      	; 0x5fa <__mulsf3_pse+0x84>
 602:	98 3e       	cpi	r25, 0xE8	; 232
 604:	d4 f3       	brlt	.-12     	; 0x5fa <__mulsf3_pse+0x84>
 606:	86 95       	lsr	r24
 608:	77 95       	ror	r23
 60a:	67 95       	ror	r22
 60c:	b7 95       	ror	r27
 60e:	f7 95       	ror	r31
 610:	e7 95       	ror	r30
 612:	9f 5f       	subi	r25, 0xFF	; 255
 614:	c1 f7       	brne	.-16     	; 0x606 <__mulsf3_pse+0x90>
 616:	fe 2b       	or	r31, r30
 618:	88 0f       	add	r24, r24
 61a:	91 1d       	adc	r25, r1
 61c:	96 95       	lsr	r25
 61e:	87 95       	ror	r24
 620:	97 f9       	bld	r25, 7
 622:	08 95       	ret

00000624 <_exit>:
 624:	f8 94       	cli

00000626 <__stop_program>:
 626:	ff cf       	rjmp	.-2      	; 0x626 <__stop_program>
